###############################################################################
#
#   Main configuration and metadata file. Contains configuration metadata for
#   the project itself and configuration data for code quality checking utils:
#       - mypy
#       - flake8
#       - pylint
#       - isort
#       - pytest
#       - coverage (coverage.py)
#
#   Created:  Dmitrii Gusev, 09.10.2022
#   Modified: Dmitrii Gusev, 02.01.2025
#
###############################################################################

# -- mypy library config
[mypy]
ignore_missing_imports = True
check_untyped_defs = True
allow_untyped_defs = True

# -- flake8 library config
[flake8]
# - list of ignored issues:
#       - E501 - too long line
#       - F401 - imported but unused
#       - E203 - whitespace before ':' - black formatter puts it
ignore = E203
# - max cognitive complexity for statements
max-complexity = 10
# - adjustment to align with line length for black (it uses 88 chars by default)
# - we use the value = 110 as a default for the project (should be set everywhere)
max-line-length = 110

# -- pylint library config
[pylint.'MASTER']
disable=
    C0114, # missing-module-docstring
    C0115, # missing-class-docstring
    C0116, # missing-function-docstring
[pylint.'FORMAT']
max-line-length = 110
max-module-lines=1000

# -- pytest library config
[tool:pytest]
minversion = 6.0
testpaths =
    tests
    # integration
# - markers for unit tests (for selective execution)
markers =
    functional: these tests are significantly slower as they run the whole CLI script
# - optional - always add these options to pytest call
addopts = --cov --cov-config=.coveragerc --verbose --cov-report=html --cov-report=xml
    --cov-report=json --capture=sys --cov-report=annotate

# - isort library config
[isort]
profile=black
src_paths=src,test

# - coverage library config (used by pytest)
[coverage:run]
branch = True
data_file = .coverage/.coverage
omit =
        *__init__*
        */temp/*
        */tests/*
        */.vscode/*

[coverage:report]
show_missing = True
# - show 2 decimal digits for coverage values
precision = 2
# - regexes for lines to exclude from consideration (unreachable/never run code)
exclude_also =
    # don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True

[coverage:html]
directory = .coverage/htmlcoverage
title = "PyUtilities :: Unit Tests Coverage Report"

[coverage:xml]
output = .coverage/coverage.xml

# -- this setting is used by coverage.py, but ignored by pytest-cov
[coverage:json]
output = .coverage/coverage.json
pretty_print = True

# -- application / library metadata
[metadata]
name = pyutilities
version = attr: pyutilities.VERSION
description = PyUtilities :: Useful python 3.10+ utilities library for various use cases.
url = https://pypi.org/project/pyutilities
project_urls =
    Source Code = https://github.com/dmitry-ed-gusev/pyutilities
    Bug Tracker = https://github.com/dmitry-ed-gusev/pyutilities/issues
    # Documentation = <docs url>
    # <more urls>
author = Dmitrii Gusev
author_email = dmitry.ed.gusev@gmail.com
long_description = file: README.md, LICENSE
long_description_content_type = text/markdown
license_files = LICENSE
keywords = python, toolset, utilities, library, string utils, utils
license = MIT
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Topic :: Utilities

[options]
zip_safe = False
python_requires = >=3.10
include_package_data = True
package_dir =
    = src
packages = find:
install_requires =
    xlrd==2.0.1
    xlwt==1.3.0
    loguru==0.7.3
    xlwings==0.33.9
    pyyaml==6.0.2
    openpyxl==3.1.5
    urllib3==2.3.0
    paramiko==3.5.1
    requests==2.32.3
    markdown==3.7
    prettytable==3.14.0
    fake-useragent==2.0.3

[options.package_data]
* = *.txt, *.rst
# hello = *.msg

# -- path for sources searching
[options.packages.find]
where = src

# -- integration with setuptools - cmd line entry points
# TODO: this integration for the next version!
# [options.entry_points]
# console_scripts =
#     fedit = pyutilities.cli.fedit:fedit
#     echo_srv = pyutilities.cli.echo_server_ipv4:do_serve
#     md2x = pyutilities.cli.md2html:main
